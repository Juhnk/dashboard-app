/*! For license information please see 765.7bb2bbef.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_mustache_web=self.webpackChunk_mustache_web||[]).push([[765],{"../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js":(__unused_webpack_module,exports,__webpack_require__)=>{var React=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var objectIs="function"==typeof Object.is?Object.is:function is(x,y){return x===y&&(0!==x||1/x==1/y)||x!=x&&y!=y},useState=React.useState,useEffect=React.useEffect,useLayoutEffect=React.useLayoutEffect,useDebugValue=React.useDebugValue;function checkIfSnapshotChanged(inst){var latestGetSnapshot=inst.getSnapshot;inst=inst.value;try{var nextValue=latestGetSnapshot();return!objectIs(inst,nextValue)}catch(error){return!0}}var shim="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function useSyncExternalStore$1(subscribe,getSnapshot){return getSnapshot()}:function useSyncExternalStore$2(subscribe,getSnapshot){var value=getSnapshot(),_useState=useState({inst:{value,getSnapshot}}),inst=_useState[0].inst,forceUpdate=_useState[1];return useLayoutEffect(function(){inst.value=value,inst.getSnapshot=getSnapshot,checkIfSnapshotChanged(inst)&&forceUpdate({inst})},[subscribe,value,getSnapshot]),useEffect(function(){return checkIfSnapshotChanged(inst)&&forceUpdate({inst}),subscribe(function(){checkIfSnapshotChanged(inst)&&forceUpdate({inst})})},[subscribe]),useDebugValue(value),value};exports.useSyncExternalStore=void 0!==React.useSyncExternalStore?React.useSyncExternalStore:shim},"../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js":(__unused_webpack_module,exports,__webpack_require__)=>{var React=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),shim=__webpack_require__("../../node_modules/use-sync-external-store/shim/index.js");var objectIs="function"==typeof Object.is?Object.is:function is(x,y){return x===y&&(0!==x||1/x==1/y)||x!=x&&y!=y},useSyncExternalStore=shim.useSyncExternalStore,useRef=React.useRef,useEffect=React.useEffect,useMemo=React.useMemo,useDebugValue=React.useDebugValue;exports.useSyncExternalStoreWithSelector=function(subscribe,getSnapshot,getServerSnapshot,selector,isEqual){var instRef=useRef(null);if(null===instRef.current){var inst={hasValue:!1,value:null};instRef.current=inst}else inst=instRef.current;instRef=useMemo(function(){function memoizedSelector(nextSnapshot){if(!hasMemo){if(hasMemo=!0,memoizedSnapshot=nextSnapshot,nextSnapshot=selector(nextSnapshot),void 0!==isEqual&&inst.hasValue){var currentSelection=inst.value;if(isEqual(currentSelection,nextSnapshot))return memoizedSelection=currentSelection}return memoizedSelection=nextSnapshot}if(currentSelection=memoizedSelection,objectIs(memoizedSnapshot,nextSnapshot))return currentSelection;var nextSelection=selector(nextSnapshot);return void 0!==isEqual&&isEqual(currentSelection,nextSelection)?(memoizedSnapshot=nextSnapshot,currentSelection):(memoizedSnapshot=nextSnapshot,memoizedSelection=nextSelection)}var memoizedSnapshot,memoizedSelection,hasMemo=!1,maybeGetServerSnapshot=void 0===getServerSnapshot?null:getServerSnapshot;return[function(){return memoizedSelector(getSnapshot())},null===maybeGetServerSnapshot?void 0:function(){return memoizedSelector(maybeGetServerSnapshot())}]},[getSnapshot,getServerSnapshot,selector,isEqual]);var value=useSyncExternalStore(subscribe,instRef[0],instRef[1]);return useEffect(function(){inst.hasValue=!0,inst.value=value},[value]),useDebugValue(value),value}},"../../node_modules/use-sync-external-store/shim/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js")},"../../node_modules/use-sync-external-store/shim/with-selector.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js")},"../../node_modules/zustand/esm/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{vt:()=>create});var console=__webpack_require__("../../node_modules/console-browserify/index.js");const createStoreImpl=createState=>{let state;const listeners=new Set,setState=(partial,replace)=>{const nextState="function"==typeof partial?partial(state):partial;if(!Object.is(nextState,state)){const previousState=state;state=(null!=replace?replace:"object"!=typeof nextState||null===nextState)?nextState:Object.assign({},state,nextState),listeners.forEach(listener=>listener(state,previousState))}},getState=()=>state,api={setState,getState,getInitialState:()=>initialState,subscribe:listener=>(listeners.add(listener),()=>listeners.delete(listener)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),listeners.clear()}},initialState=state=createState(setState,getState,api);return api},createStore=createState=>createState?createStoreImpl(createState):createStoreImpl;var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),with_selector=__webpack_require__("../../node_modules/use-sync-external-store/shim/with-selector.js"),esm_console=__webpack_require__("../../node_modules/console-browserify/index.js");const{useDebugValue}=react,{useSyncExternalStoreWithSelector}=with_selector;let didWarnAboutEqualityFn=!1;const identity=arg=>arg;const createImpl=createState=>{"function"!=typeof createState&&esm_console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const api="function"==typeof createState?createStore(createState):createState,useBoundStore=(selector,equalityFn)=>function useStore(api,selector=identity,equalityFn){equalityFn&&!didWarnAboutEqualityFn&&(esm_console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),didWarnAboutEqualityFn=!0);const slice=useSyncExternalStoreWithSelector(api.subscribe,api.getState,api.getServerState||api.getInitialState,selector,equalityFn);return useDebugValue(slice),slice}(api,selector,equalityFn);return Object.assign(useBoundStore,api),useBoundStore},create=createState=>createState?createImpl(createState):createImpl},"../../node_modules/zustand/esm/middleware.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{lt:()=>devtools});var console=__webpack_require__("../../node_modules/console-browserify/index.js");const trackedConnections=new Map,getTrackedConnectionState=name=>{const api=trackedConnections.get(name);return api?Object.fromEntries(Object.entries(api.stores).map(([key,api2])=>[key,api2.getState()])):{}},devtools=(fn,devtoolsOptions={})=>(set,get,api)=>{const{enabled,anonymousActionType,store,...options}=devtoolsOptions;let extensionConnector;try{extensionConnector=(null==enabled||enabled)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch(_e){}if(!extensionConnector)return enabled&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),fn(set,get,api);const{connection,...connectionInformation}=((store,extensionConnector,options)=>{if(void 0===store)return{type:"untracked",connection:extensionConnector.connect(options)};const existingConnection=trackedConnections.get(options.name);if(existingConnection)return{type:"tracked",store,...existingConnection};const newConnection={connection:extensionConnector.connect(options),stores:{}};return trackedConnections.set(options.name,newConnection),{type:"tracked",store,...newConnection}})(store,extensionConnector,options);let isRecording=!0;api.setState=(state,replace,nameOrAction)=>{const r=set(state,replace);if(!isRecording)return r;const action=void 0===nameOrAction?{type:anonymousActionType||"anonymous"}:"string"==typeof nameOrAction?{type:nameOrAction}:nameOrAction;return void 0===store?(null==connection||connection.send(action,get()),r):(null==connection||connection.send({...action,type:`${store}/${action.type}`},{...getTrackedConnectionState(options.name),[store]:api.getState()}),r)};const setStateFromDevtools=(...a)=>{const originalIsRecording=isRecording;isRecording=!1,set(...a),isRecording=originalIsRecording},initialState=fn(api.setState,get,api);if("untracked"===connectionInformation.type?null==connection||connection.init(initialState):(connectionInformation.stores[connectionInformation.store]=api,null==connection||connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(([key,store2])=>[key,key===connectionInformation.store?initialState:store2.getState()])))),api.dispatchFromDevtools&&"function"==typeof api.dispatch){let didWarnAboutReservedActionType=!1;const originalDispatch=api.dispatch;api.dispatch=(...a)=>{"__setState"!==a[0].type||didWarnAboutReservedActionType||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),didWarnAboutReservedActionType=!0),originalDispatch(...a)}}return connection.subscribe(message=>{var _a;switch(message.type){case"ACTION":return"string"!=typeof message.payload?void console.error("[zustand devtools middleware] Unsupported action format"):parseJsonThen(message.payload,action=>{if("__setState"===action.type){if(void 0===store)return void setStateFromDevtools(action.state);1!==Object.keys(action.state).length&&console.error('\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using \'store\' option in devtools(), the \'state\' should have only one key, which is a value of \'store\' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }\n                    ');const stateFromDevtools=action.state[store];if(null==stateFromDevtools)return;return void(JSON.stringify(api.getState())!==JSON.stringify(stateFromDevtools)&&setStateFromDevtools(stateFromDevtools))}api.dispatchFromDevtools&&"function"==typeof api.dispatch&&api.dispatch(action)});case"DISPATCH":switch(message.payload.type){case"RESET":return setStateFromDevtools(initialState),void 0===store?null==connection?void 0:connection.init(api.getState()):null==connection?void 0:connection.init(getTrackedConnectionState(options.name));case"COMMIT":return void 0===store?void(null==connection||connection.init(api.getState())):null==connection?void 0:connection.init(getTrackedConnectionState(options.name));case"ROLLBACK":return parseJsonThen(message.state,state=>{if(void 0===store)return setStateFromDevtools(state),void(null==connection||connection.init(api.getState()));setStateFromDevtools(state[store]),null==connection||connection.init(getTrackedConnectionState(options.name))});case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return parseJsonThen(message.state,state=>{void 0!==store?JSON.stringify(api.getState())!==JSON.stringify(state[store])&&setStateFromDevtools(state[store]):setStateFromDevtools(state)});case"IMPORT_STATE":{const{nextLiftedState}=message.payload,lastComputedState=null==(_a=nextLiftedState.computedStates.slice(-1)[0])?void 0:_a.state;if(!lastComputedState)return;return setStateFromDevtools(void 0===store?lastComputedState:lastComputedState[store]),void(null==connection||connection.send(null,nextLiftedState))}case"PAUSE_RECORDING":return isRecording=!isRecording}return}}),initialState},parseJsonThen=(stringified,f)=>{let parsed;try{parsed=JSON.parse(stringified)}catch(e){console.error("[zustand devtools middleware] Could not parse the received json",e)}void 0!==parsed&&f(parsed)}}}]);