"use strict";(self.webpackChunk_mustache_web=self.webpackChunk_mustache_web||[]).push([[131],{"./src/components/dashboard/multi-source-chart-builder.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllWidgetTypes:()=>AllWidgetTypes,BarChartBuilder:()=>BarChartBuilder,Closed:()=>Closed,Default:()=>Default,PieChartBuilder:()=>PieChartBuilder,WithInitialConfig:()=>WithInitialConfig,WorkflowExample:()=>WorkflowExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>multi_source_chart_builder_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),data_source_store=__webpack_require__("./src/stores/data-source-store.ts"),semantic_merge_engine=__webpack_require__("./src/lib/semantic-merge-engine.ts"),chart_wrapper=__webpack_require__("./src/components/charts/chart-wrapper.tsx"),Button=(__webpack_require__("./src/components/charts/line-chart.tsx"),__webpack_require__("./src/components/charts/bar-chart.tsx"),__webpack_require__("./src/components/charts/pie-chart.tsx"),__webpack_require__("./src/components/charts/donut-chart.tsx"),__webpack_require__("./src/components/charts/area-chart.tsx"),__webpack_require__("./src/components/charts/scatter-chart.tsx"),__webpack_require__("./src/components/charts/data-table.tsx"),__webpack_require__("./src/components/charts/metric-card.tsx"),__webpack_require__("./src/components/charts/funnel-chart.tsx"),__webpack_require__("./src/components/charts/heatmap.tsx"),__webpack_require__("./src/components/charts/gauge-chart.tsx"),__webpack_require__("./src/components/ui/Button.tsx")),console=__webpack_require__("../../node_modules/console-browserify/index.js");function multi_source_chart_builder_MultiSourceChartBuilder({isOpen,onClose,onSave,widgetType,initialConfig}){var _config_dateRange,_config_dateRange1;const{demoSources,mergeSuggestions,mergeRules,addMergeRule}=(0,data_source_store.O)(),[config,setConfig]=(0,react.useState)({title:`New ${widgetType.replace("_"," ")} Chart`,selectedSources:[],dimensions:[],metrics:[],mergedColumns:{},filters:[],chartType:widgetType}),[previewData,setPreviewData]=(0,react.useState)(null),[isLoadingPreview,setIsLoadingPreview]=(0,react.useState)(!1),[showMergeSuggestions,setShowMergeSuggestions]=(0,react.useState)(!1),[activeTab,setActiveTab]=(0,react.useState)("sources");(0,react.useEffect)(()=>{initialConfig&&setConfig(prev=>({...prev,...initialConfig}))},[initialConfig]),(0,react.useEffect)(()=>{config.selectedSources.length>0&&(config.dimensions.length>0||config.metrics.length>0)?generatePreview():setPreviewData(null)},[config]);const availableColumns=(0,react.useMemo)(()=>{const columns=new Map;return config.selectedSources.forEach(sourceId=>{const source=demoSources.find(s=>s.id===sourceId);source&&source.schema.forEach(column=>{const key=column.name;columns.has(key)||columns.set(key,{name:column.name,displayName:column.displayName,type:column.type,classification:column.classification,sources:[]}),columns.get(key).sources.push({sourceId:source.id,sourceName:source.name,columnName:column.name})})}),mergeRules.forEach(rule=>{rule.sourceColumns.some(sc=>config.selectedSources.includes(sc.sourceId))&&columns.set(rule.mergedName,{name:rule.mergedName,displayName:rule.displayName,type:"number",classification:rule.classification,sources:rule.sourceColumns.filter(sc=>config.selectedSources.includes(sc.sourceId)).map(sc=>{const source=demoSources.find(s=>s.id===sc.sourceId);return{sourceId:sc.sourceId,sourceName:(null==source?void 0:source.name)||"Unknown",columnName:sc.columnName}})})}),Array.from(columns.values())},[config.selectedSources,demoSources,mergeRules]),dimensions=(0,react.useMemo)(()=>availableColumns.filter(col=>"dimension"===col.classification),[availableColumns]),metrics=(0,react.useMemo)(()=>availableColumns.filter(col=>"metric"===col.classification),[availableColumns]),relevantSuggestions=(0,react.useMemo)(()=>mergeSuggestions.filter(suggestion=>suggestion.columns.every(col=>config.selectedSources.includes(col.sourceId))),[mergeSuggestions,config.selectedSources]),generatePreview=async()=>{if(0!==config.selectedSources.length){setIsLoadingPreview(!0);try{const query={sources:config.selectedSources,dimensions:config.dimensions,metrics:config.metrics,filters:config.filters,dateRange:config.dateRange,limit:100},result=await semantic_merge_engine.Z.executeQuery(query,demoSources);setPreviewData(result)}catch(error){console.error("Failed to generate preview:",error),setPreviewData(null)}finally{setIsLoadingPreview(!1)}}},handleCreateMerge=async(suggestion,aggregationType)=>{const mergeRule=semantic_merge_engine.Z.createMergeRule(suggestion.canonicalName,suggestion.displayName,suggestion.columns.map(col=>({sourceId:col.sourceId,columnName:col.columnName})),aggregationType);addMergeRule(mergeRule),setShowMergeSuggestions(!1)};return isOpen?(0,jsx_runtime.jsx)("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white rounded-lg shadow-xl max-w-7xl w-full mx-4 max-h-[95vh] overflow-hidden flex flex-col",children:[(0,jsx_runtime.jsxs)("div",{className:"p-6 border-b border-gray-200",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{className:"text-xl font-semibold text-gray-900",children:"Multi-Source Chart Builder"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-500 mt-1",children:"Create intelligent charts that merge data across multiple sources"})]}),(0,jsx_runtime.jsx)("button",{onClick:onClose,className:"text-gray-400 hover:text-gray-600 p-2",children:(0,jsx_runtime.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,jsx_runtime.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M6 18L18 6M6 6l12 12"})})})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4",children:(0,jsx_runtime.jsx)("input",{type:"text",value:config.title,onChange:e=>setConfig(prev=>({...prev,title:e.target.value})),className:"text-lg font-medium w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary-500",placeholder:"Enter chart title"})})]}),(0,jsx_runtime.jsx)("div",{className:"border-b border-gray-200",children:(0,jsx_runtime.jsx)("nav",{className:"flex space-x-8 px-6",children:[{id:"sources",label:"Data Sources",icon:"🗂️"},{id:"columns",label:"Dimensions & Metrics",icon:"📊"},{id:"filters",label:"Filters",icon:"🔍"},{id:"preview",label:"Preview",icon:"👁️"}].map(tab=>(0,jsx_runtime.jsxs)("button",{onClick:()=>setActiveTab(tab.id),className:"py-4 px-1 border-b-2 font-medium text-sm transition-colors "+(activeTab===tab.id?"border-primary-500 text-primary-600":"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"),children:[(0,jsx_runtime.jsx)("span",{className:"mr-2",children:tab.icon}),tab.label]},tab.id))})}),(0,jsx_runtime.jsx)("div",{className:"flex flex-1 overflow-hidden",children:(0,jsx_runtime.jsxs)("div",{className:"flex-1 overflow-y-auto p-6",children:["sources"===activeTab&&(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{className:"mb-6",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"Select Data Sources"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600",children:"Choose multiple sources to create a unified view of your data"})]}),(0,jsx_runtime.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:demoSources.map(source=>(0,jsx_runtime.jsxs)("div",{className:"p-4 border-2 rounded-lg cursor-pointer transition-colors "+(config.selectedSources.includes(source.id)?"border-primary-500 bg-primary-50":"border-gray-200 hover:border-gray-300"),onClick:()=>{return sourceId=source.id,void setConfig(prev=>({...prev,selectedSources:prev.selectedSources.includes(sourceId)?prev.selectedSources.filter(id=>id!==sourceId):[...prev.selectedSources,sourceId],dimensions:[],metrics:[]}));var sourceId},children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between mb-2",children:[(0,jsx_runtime.jsx)("h4",{className:"font-medium text-gray-900",children:source.name}),(0,jsx_runtime.jsx)("div",{className:"w-2 h-2 rounded-full "+("active"===source.status?"bg-green-500":"bg-yellow-500")})]}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600 mb-3",children:source.description}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between text-xs text-gray-500",children:[(0,jsx_runtime.jsxs)("span",{children:[source.schema.length," columns"]}),(0,jsx_runtime.jsxs)("span",{children:[source.data.length," rows"]})]})]},source.id))}),relevantSuggestions.length>0&&(0,jsx_runtime.jsxs)("div",{className:"mt-8",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between mb-4",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-medium text-gray-900",children:"Merge Suggestions"}),(0,jsx_runtime.jsxs)("button",{onClick:()=>setShowMergeSuggestions(!showMergeSuggestions),className:"text-sm text-primary-600 hover:text-primary-700",children:[showMergeSuggestions?"Hide":"Show"," Suggestions"]})]}),showMergeSuggestions&&(0,jsx_runtime.jsx)("div",{className:"space-y-3",children:relevantSuggestions.map((suggestion,index)=>(0,jsx_runtime.jsxs)("div",{className:"p-4 bg-blue-50 border border-blue-200 rounded-lg",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between mb-2",children:[(0,jsx_runtime.jsx)("h4",{className:"font-medium text-blue-900",children:suggestion.displayName}),(0,jsx_runtime.jsxs)("span",{className:"text-sm text-blue-700 font-medium",children:[Math.round(100*suggestion.confidence),"% confidence"]})]}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-800 mb-3",children:suggestion.reason}),(0,jsx_runtime.jsx)("div",{className:"flex flex-wrap gap-2 mb-3",children:suggestion.columns.map((col,colIndex)=>(0,jsx_runtime.jsxs)("span",{className:"inline-flex items-center px-2 py-1 rounded text-xs bg-white text-blue-800 border border-blue-200",children:[col.sourceName,": ",col.columnName]},colIndex))}),(0,jsx_runtime.jsxs)("div",{className:"flex space-x-2",children:[(0,jsx_runtime.jsx)(Button.$,{onClick:()=>handleCreateMerge(suggestion,"sum"),size:"sm",variant:"outline",children:"Merge (Sum)"}),(0,jsx_runtime.jsx)(Button.$,{onClick:()=>handleCreateMerge(suggestion,"avg"),size:"sm",variant:"outline",children:"Merge (Average)"})]})]},index))})]})]}),"columns"===activeTab&&(0,jsx_runtime.jsx)("div",{children:0===config.selectedSources.length?(0,jsx_runtime.jsxs)("div",{className:"text-center py-12",children:[(0,jsx_runtime.jsx)("div",{className:"text-gray-500 mb-4",children:"Please select data sources first"}),(0,jsx_runtime.jsx)(Button.$,{onClick:()=>setActiveTab("sources"),variant:"outline",children:"Go to Sources"})]}):(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-8",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("h3",{className:"text-lg font-medium text-gray-900 mb-4",children:["Dimensions ",(0,jsx_runtime.jsx)("span",{className:"text-sm text-gray-500",children:"(Group by)"})]}),(0,jsx_runtime.jsx)("div",{className:"space-y-2",children:dimensions.map(column=>(0,jsx_runtime.jsxs)("div",{className:"p-3 border rounded-lg cursor-pointer transition-colors "+(config.dimensions.includes(column.name)?"border-primary-500 bg-primary-50":"border-gray-200 hover:border-gray-300"),onClick:()=>{return columnName=column.name,void setConfig(prev=>({...prev,dimensions:prev.dimensions.includes(columnName)?prev.dimensions.filter(name=>name!==columnName):[...prev.dimensions,columnName]}));var columnName},children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h4",{className:"font-medium text-gray-900",children:column.displayName}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600 font-mono",children:column.name})]}),(0,jsx_runtime.jsx)("span",{className:"inline-flex items-center px-2 py-1 rounded text-xs font-medium "+("date"===column.type?"bg-green-100 text-green-800":"bg-gray-100 text-gray-800"),children:column.type})]}),column.sources.length>1&&(0,jsx_runtime.jsx)("div",{className:"mt-2 flex flex-wrap gap-1",children:column.sources.map((source,index)=>(0,jsx_runtime.jsx)("span",{className:"inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-700",children:source.sourceName},index))})]},column.name))})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("h3",{className:"text-lg font-medium text-gray-900 mb-4",children:["Metrics ",(0,jsx_runtime.jsx)("span",{className:"text-sm text-gray-500",children:"(Measure)"})]}),(0,jsx_runtime.jsx)("div",{className:"space-y-2",children:metrics.map(column=>(0,jsx_runtime.jsxs)("div",{className:"p-3 border rounded-lg cursor-pointer transition-colors "+(config.metrics.includes(column.name)?"border-primary-500 bg-primary-50":"border-gray-200 hover:border-gray-300"),onClick:()=>{return columnName=column.name,void setConfig(prev=>({...prev,metrics:prev.metrics.includes(columnName)?prev.metrics.filter(name=>name!==columnName):[...prev.metrics,columnName]}));var columnName},children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h4",{className:"font-medium text-gray-900",children:column.displayName}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600 font-mono",children:column.name})]}),(0,jsx_runtime.jsx)("span",{className:"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-100 text-blue-800",children:column.type})]}),column.sources.length>1&&(0,jsx_runtime.jsx)("div",{className:"mt-2 flex flex-wrap gap-1",children:column.sources.map((source,index)=>(0,jsx_runtime.jsx)("span",{className:"inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-700",children:source.sourceName},index))})]},column.name))})]})]})}),"filters"===activeTab&&(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-medium text-gray-900 mb-4",children:"Filters"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600 mb-6",children:"Add filters to refine your data before visualization"}),(0,jsx_runtime.jsxs)("div",{className:"mb-6 p-4 border border-gray-200 rounded-lg",children:[(0,jsx_runtime.jsx)("h4",{className:"font-medium text-gray-900 mb-3",children:"Date Range"}),(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-2 gap-4",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm text-gray-700 mb-1",children:"Start Date"}),(0,jsx_runtime.jsx)("input",{type:"date",value:(null===(_config_dateRange=config.dateRange)||void 0===_config_dateRange?void 0:_config_dateRange.start)||"",onChange:e=>setConfig(prev=>{var _prev_dateRange;return{...prev,dateRange:{start:e.target.value,end:(null===(_prev_dateRange=prev.dateRange)||void 0===_prev_dateRange?void 0:_prev_dateRange.end)||""}}}),className:"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-primary-500"})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm text-gray-700 mb-1",children:"End Date"}),(0,jsx_runtime.jsx)("input",{type:"date",value:(null===(_config_dateRange1=config.dateRange)||void 0===_config_dateRange1?void 0:_config_dateRange1.end)||"",onChange:e=>setConfig(prev=>{var _prev_dateRange;return{...prev,dateRange:{start:(null===(_prev_dateRange=prev.dateRange)||void 0===_prev_dateRange?void 0:_prev_dateRange.start)||"",end:e.target.value}}}),className:"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-primary-500"})]})]})]}),(0,jsx_runtime.jsx)("div",{className:"text-center py-8 text-gray-500",children:"Additional filter options coming soon..."})]}),"preview"===activeTab&&(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{className:"mb-6",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-medium text-gray-900 mb-2",children:"Chart Preview"}),previewData&&(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-4 text-sm text-gray-600",children:[(0,jsx_runtime.jsxs)("span",{children:[previewData.metadata.totalRows," rows"]}),(0,jsx_runtime.jsx)("span",{children:"•"}),(0,jsx_runtime.jsxs)("span",{children:[previewData.metadata.sourcesUsed.length," sources"]}),(0,jsx_runtime.jsx)("span",{children:"•"}),(0,jsx_runtime.jsxs)("span",{children:[previewData.metadata.mergeRulesApplied.length," merge rules"]}),(0,jsx_runtime.jsx)("span",{children:"•"}),(0,jsx_runtime.jsxs)("span",{children:[previewData.metadata.queryExecutionTime,"ms execution"]})]})]}),isLoadingPreview?(0,jsx_runtime.jsx)("div",{className:"h-96 flex items-center justify-center",children:(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-2"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-500",children:"Generating preview..."})]})}):previewData?(0,jsx_runtime.jsx)("div",{className:"h-96 border border-gray-200 rounded-lg p-4",children:(0,jsx_runtime.jsx)(chart_wrapper._,{type:config.chartType,data:previewData.data,config:{dimension:config.dimensions[0],metrics:config.metrics,xAxisKey:config.dimensions[0],title:config.title},className:"h-full"})}):(0,jsx_runtime.jsx)("div",{className:"h-96 flex items-center justify-center border border-gray-200 rounded-lg",children:(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"text-gray-500 mb-2",children:"Configure your chart to see preview"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-400",children:"Select sources, dimensions, and metrics to generate a preview"})]})})]})]})}),(0,jsx_runtime.jsx)("div",{className:"p-6 border-t border-gray-200 bg-gray-50",children:(0,jsx_runtime.jsxs)("div",{className:"flex justify-between items-center",children:[(0,jsx_runtime.jsxs)("div",{className:"text-sm text-gray-600",children:[config.selectedSources.length," sources • ",config.dimensions.length," dimensions • ",config.metrics.length," metrics"]}),(0,jsx_runtime.jsxs)("div",{className:"flex space-x-3",children:[(0,jsx_runtime.jsx)(Button.$,{onClick:onClose,variant:"outline",children:"Cancel"}),(0,jsx_runtime.jsx)(Button.$,{onClick:()=>{const chartConfig={title:config.title,multiSource:!0,sources:config.selectedSources,dimensions:config.dimensions,metrics:config.metrics,filters:config.filters,dateRange:config.dateRange,chartType:config.chartType,data:(null==previewData?void 0:previewData.data)||[],mergeRulesUsed:(null==previewData?void 0:previewData.metadata.mergeRulesApplied)||[]};onSave(chartConfig)},disabled:0===config.selectedSources.length||0===config.dimensions.length&&0===config.metrics.length,children:"Save Chart"})]})]})})]})}):null}try{multi_source_chart_builder_MultiSourceChartBuilder.displayName="MultiSourceChartBuilder",multi_source_chart_builder_MultiSourceChartBuilder.__docgenInfo={description:"",displayName:"MultiSourceChartBuilder",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},onSave:{defaultValue:null,description:"",name:"onSave",required:!0,type:{name:"(config: any) => void"}},widgetType:{defaultValue:null,description:"",name:"widgetType",required:!0,type:{name:"string"}},initialConfig:{defaultValue:null,description:"",name:"initialConfig",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/dashboard/multi-source-chart-builder.tsx#MultiSourceChartBuilder"]={docgenInfo:multi_source_chart_builder_MultiSourceChartBuilder.__docgenInfo,name:"MultiSourceChartBuilder",path:"src/components/dashboard/multi-source-chart-builder.tsx#MultiSourceChartBuilder"})}catch(__react_docgen_typescript_loader_error){}var multi_source_chart_builder_stories_console=__webpack_require__("../../node_modules/console-browserify/index.js");const multi_source_chart_builder_stories={title:"Dashboard/MultiSourceChartBuilder",component:multi_source_chart_builder_MultiSourceChartBuilder,parameters:{layout:"fullscreen",docs:{description:{component:"Advanced chart builder that enables users to create sophisticated visualizations by combining data from multiple sources with intelligent semantic merging. This is the crown jewel of our Dynamic Marketing Intelligence Platform."}}},tags:["autodocs"],argTypes:{isOpen:{control:{type:"boolean"},description:"Whether the modal is open"},widgetType:{control:{type:"select"},options:["line_chart","bar_chart","pie_chart","donut_chart","area_chart"],description:"Type of chart to build"},onClose:{action:"closed",description:"Called when modal is closed"},onSave:{action:"saved",description:"Called when chart configuration is saved"}}},Default={args:{isOpen:!0,widgetType:"line_chart",onClose:()=>multi_source_chart_builder_stories_console.log("Modal closed"),onSave:config=>multi_source_chart_builder_stories_console.log("Chart saved:",config)},parameters:{docs:{description:{story:"The multi-source chart builder in its default state, ready for users to select data sources and configure advanced analytics."}}}},BarChartBuilder={args:{isOpen:!0,widgetType:"bar_chart",onClose:()=>multi_source_chart_builder_stories_console.log("Modal closed"),onSave:config=>multi_source_chart_builder_stories_console.log("Bar chart saved:",config)},parameters:{docs:{description:{story:"Multi-source chart builder configured for creating bar charts, perfect for comparing metrics across different advertising platforms."}}}},PieChartBuilder={args:{isOpen:!0,widgetType:"pie_chart",onClose:()=>multi_source_chart_builder_stories_console.log("Modal closed"),onSave:config=>multi_source_chart_builder_stories_console.log("Pie chart saved:",config)},parameters:{docs:{description:{story:"Multi-source chart builder for pie charts, ideal for showing distribution of metrics across different sources or campaigns."}}}},WithInitialConfig={args:{isOpen:!0,widgetType:"line_chart",initialConfig:{title:"Cross-Platform Cost Analysis",selectedSources:["google_ads_demo","facebook_ads_demo"],dimensions:["date"],metrics:["cost","spend"],chartType:"line_chart"},onClose:()=>multi_source_chart_builder_stories_console.log("Modal closed"),onSave:config=>multi_source_chart_builder_stories_console.log("Pre-configured chart saved:",config)},parameters:{docs:{description:{story:"Multi-source chart builder with pre-selected configuration, demonstrating how the interface appears when editing an existing multi-source widget."}}}},Closed={args:{isOpen:!1,widgetType:"line_chart",onClose:()=>multi_source_chart_builder_stories_console.log("Modal closed"),onSave:config=>multi_source_chart_builder_stories_console.log("Chart saved:",config)},parameters:{docs:{description:{story:'The multi-source chart builder in its closed state. In practice, this would be triggered by clicking the "Multi-Source Builder" button in the widget configuration modal.'}}}},AllWidgetTypes={render:()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-4 p-4",children:[(0,jsx_runtime.jsx)("h2",{className:"text-xl font-bold",children:"Multi-Source Chart Builder - Widget Types"}),(0,jsx_runtime.jsx)("p",{className:"text-gray-600 mb-6",children:"The multi-source chart builder supports all major chart types for comprehensive data visualization:"}),(0,jsx_runtime.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:[{type:"line_chart",name:"Line Chart",icon:"📈",description:"Perfect for time-series data and trend analysis"},{type:"bar_chart",name:"Bar Chart",icon:"📊",description:"Ideal for comparing metrics across categories"},{type:"pie_chart",name:"Pie Chart",icon:"🥧",description:"Great for showing proportional data"},{type:"donut_chart",name:"Donut Chart",icon:"🍩",description:"Similar to pie chart with center space for additional info"},{type:"area_chart",name:"Area Chart",icon:"📉",description:"Shows cumulative data over time"}].map(chart=>(0,jsx_runtime.jsxs)("div",{className:"p-4 border rounded-lg hover:bg-gray-50",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2 mb-2",children:[(0,jsx_runtime.jsx)("span",{className:"text-2xl",children:chart.icon}),(0,jsx_runtime.jsx)("h3",{className:"font-medium",children:chart.name})]}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600",children:chart.description}),(0,jsx_runtime.jsx)("button",{className:"mt-2 text-xs text-blue-600 hover:text-blue-700",onClick:()=>{multi_source_chart_builder_stories_console.log(`Opening ${chart.type} builder`)},children:"Open Builder →"})]},chart.type))})]}),parameters:{docs:{description:{story:"Overview of all chart types supported by the multi-source chart builder, each optimized for different types of data visualization needs."}}}},WorkflowExample={render:()=>(0,jsx_runtime.jsxs)("div",{className:"max-w-4xl mx-auto p-6 space-y-8",children:[(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("h2",{className:"text-2xl font-bold mb-2",children:"Multi-Source Chart Builder Workflow"}),(0,jsx_runtime.jsx)("p",{className:"text-gray-600",children:"The intelligent workflow for creating sophisticated cross-platform analytics"})]}),(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-4 gap-6",children:[(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3",children:(0,jsx_runtime.jsx)("span",{className:"text-xl",children:"🗂️"})}),(0,jsx_runtime.jsx)("h3",{className:"font-medium mb-2",children:"1. Select Sources"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600",children:"Choose from Google Ads, Facebook Ads, LinkedIn Ads, and other connected data sources"})]}),(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3",children:(0,jsx_runtime.jsx)("span",{className:"text-xl",children:"🔗"})}),(0,jsx_runtime.jsx)("h3",{className:"font-medium mb-2",children:"2. Smart Merging"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600",children:"AI suggests column merges (cost ↔ spend, clicks ↔ link_clicks) with confidence scores"})]}),(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3",children:(0,jsx_runtime.jsx)("span",{className:"text-xl",children:"📊"})}),(0,jsx_runtime.jsx)("h3",{className:"font-medium mb-2",children:"3. Configure Chart"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600",children:"Select dimensions, metrics, and apply filters with real-time preview"})]}),(0,jsx_runtime.jsxs)("div",{className:"text-center",children:[(0,jsx_runtime.jsx)("div",{className:"w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-3",children:(0,jsx_runtime.jsx)("span",{className:"text-xl",children:"👁️"})}),(0,jsx_runtime.jsx)("h3",{className:"font-medium mb-2",children:"4. Live Preview"}),(0,jsx_runtime.jsx)("p",{className:"text-sm text-gray-600",children:"See merged data visualization in real-time before saving to dashboard"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"bg-blue-50 p-6 rounded-lg",children:[(0,jsx_runtime.jsx)("h3",{className:"font-medium mb-3",children:"🚀 Advanced Features"}),(0,jsx_runtime.jsxs)("ul",{className:"space-y-2 text-sm",children:[(0,jsx_runtime.jsxs)("li",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("span",{className:"w-2 h-2 bg-blue-500 rounded-full"}),(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("strong",{children:"Semantic Column Mapping:"}),' Automatically detects that "cost", "spend", and "total_spend" represent the same metric']})]}),(0,jsx_runtime.jsxs)("li",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("span",{className:"w-2 h-2 bg-blue-500 rounded-full"}),(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("strong",{children:"Intelligent Aggregation:"})," Supports sum, average, max, min, and first-value aggregation strategies"]})]}),(0,jsx_runtime.jsxs)("li",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("span",{className:"w-2 h-2 bg-blue-500 rounded-full"}),(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("strong",{children:"Runtime Query Engine:"})," Merges data on-demand without duplication or preprocessing"]})]}),(0,jsx_runtime.jsxs)("li",{className:"flex items-center space-x-2",children:[(0,jsx_runtime.jsx)("span",{className:"w-2 h-2 bg-blue-500 rounded-full"}),(0,jsx_runtime.jsxs)("span",{children:[(0,jsx_runtime.jsx)("strong",{children:"Visual Regression Testing:"})," Every UI state is automatically tested for pixel-perfect consistency"]})]})]})]})]}),parameters:{docs:{description:{story:"Comprehensive workflow documentation showing how the multi-source chart builder transforms complex data integration into an intuitive user experience."}}}},__namedExportsOrder=["Default","BarChartBuilder","PieChartBuilder","WithInitialConfig","Closed","AllWidgetTypes","WorkflowExample"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    widgetType: 'line_chart',\n    onClose: () => console.log('Modal closed'),\n    onSave: config => console.log('Chart saved:', config)\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'The multi-source chart builder in its default state, ready for users to select data sources and configure advanced analytics.'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}},BarChartBuilder.parameters={...BarChartBuilder.parameters,docs:{...BarChartBuilder.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    widgetType: 'bar_chart',\n    onClose: () => console.log('Modal closed'),\n    onSave: config => console.log('Bar chart saved:', config)\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Multi-source chart builder configured for creating bar charts, perfect for comparing metrics across different advertising platforms.'\n      }\n    }\n  }\n}",...BarChartBuilder.parameters?.docs?.source}}},PieChartBuilder.parameters={...PieChartBuilder.parameters,docs:{...PieChartBuilder.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    widgetType: 'pie_chart',\n    onClose: () => console.log('Modal closed'),\n    onSave: config => console.log('Pie chart saved:', config)\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Multi-source chart builder for pie charts, ideal for showing distribution of metrics across different sources or campaigns.'\n      }\n    }\n  }\n}",...PieChartBuilder.parameters?.docs?.source}}},WithInitialConfig.parameters={...WithInitialConfig.parameters,docs:{...WithInitialConfig.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: true,\n    widgetType: 'line_chart',\n    initialConfig: {\n      title: 'Cross-Platform Cost Analysis',\n      selectedSources: ['google_ads_demo', 'facebook_ads_demo'],\n      dimensions: ['date'],\n      metrics: ['cost', 'spend'],\n      chartType: 'line_chart'\n    },\n    onClose: () => console.log('Modal closed'),\n    onSave: config => console.log('Pre-configured chart saved:', config)\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Multi-source chart builder with pre-selected configuration, demonstrating how the interface appears when editing an existing multi-source widget.'\n      }\n    }\n  }\n}",...WithInitialConfig.parameters?.docs?.source}}},Closed.parameters={...Closed.parameters,docs:{...Closed.parameters?.docs,source:{originalSource:"{\n  args: {\n    isOpen: false,\n    widgetType: 'line_chart',\n    onClose: () => console.log('Modal closed'),\n    onSave: config => console.log('Chart saved:', config)\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'The multi-source chart builder in its closed state. In practice, this would be triggered by clicking the \"Multi-Source Builder\" button in the widget configuration modal.'\n      }\n    }\n  }\n}",...Closed.parameters?.docs?.source}}},AllWidgetTypes.parameters={...AllWidgetTypes.parameters,docs:{...AllWidgetTypes.parameters?.docs,source:{originalSource:"{\n  render: () => <div className=\"space-y-4 p-4\">\n      <h2 className=\"text-xl font-bold\">Multi-Source Chart Builder - Widget Types</h2>\n      <p className=\"text-gray-600 mb-6\">\n        The multi-source chart builder supports all major chart types for comprehensive data visualization:\n      </p>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {[{\n        type: 'line_chart',\n        name: 'Line Chart',\n        icon: '📈',\n        description: 'Perfect for time-series data and trend analysis'\n      }, {\n        type: 'bar_chart',\n        name: 'Bar Chart',\n        icon: '📊',\n        description: 'Ideal for comparing metrics across categories'\n      }, {\n        type: 'pie_chart',\n        name: 'Pie Chart',\n        icon: '🥧',\n        description: 'Great for showing proportional data'\n      }, {\n        type: 'donut_chart',\n        name: 'Donut Chart',\n        icon: '🍩',\n        description: 'Similar to pie chart with center space for additional info'\n      }, {\n        type: 'area_chart',\n        name: 'Area Chart',\n        icon: '📉',\n        description: 'Shows cumulative data over time'\n      }].map(chart => <div key={chart.type} className=\"p-4 border rounded-lg hover:bg-gray-50\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <span className=\"text-2xl\">{chart.icon}</span>\n              <h3 className=\"font-medium\">{chart.name}</h3>\n            </div>\n            <p className=\"text-sm text-gray-600\">{chart.description}</p>\n            <button className=\"mt-2 text-xs text-blue-600 hover:text-blue-700\" onClick={() => {\n          // In real implementation, this would open the builder\n          console.log(`Opening ${chart.type} builder`);\n        }}>\n              Open Builder →\n            </button>\n          </div>)}\n      </div>\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: 'Overview of all chart types supported by the multi-source chart builder, each optimized for different types of data visualization needs.'\n      }\n    }\n  }\n}",...AllWidgetTypes.parameters?.docs?.source}}},WorkflowExample.parameters={...WorkflowExample.parameters,docs:{...WorkflowExample.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="max-w-4xl mx-auto p-6 space-y-8">\n      <div className="text-center">\n        <h2 className="text-2xl font-bold mb-2">Multi-Source Chart Builder Workflow</h2>\n        <p className="text-gray-600">\n          The intelligent workflow for creating sophisticated cross-platform analytics\n        </p>\n      </div>\n\n      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">\n        <div className="text-center">\n          <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3">\n            <span className="text-xl">🗂️</span>\n          </div>\n          <h3 className="font-medium mb-2">1. Select Sources</h3>\n          <p className="text-sm text-gray-600">\n            Choose from Google Ads, Facebook Ads, LinkedIn Ads, and other connected data sources\n          </p>\n        </div>\n\n        <div className="text-center">\n          <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3">\n            <span className="text-xl">🔗</span>\n          </div>\n          <h3 className="font-medium mb-2">2. Smart Merging</h3>\n          <p className="text-sm text-gray-600">\n            AI suggests column merges (cost ↔ spend, clicks ↔ link_clicks) with confidence scores\n          </p>\n        </div>\n\n        <div className="text-center">\n          <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3">\n            <span className="text-xl">📊</span>\n          </div>\n          <h3 className="font-medium mb-2">3. Configure Chart</h3>\n          <p className="text-sm text-gray-600">\n            Select dimensions, metrics, and apply filters with real-time preview\n          </p>\n        </div>\n\n        <div className="text-center">\n          <div className="w-12 h-12 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-3">\n            <span className="text-xl">👁️</span>\n          </div>\n          <h3 className="font-medium mb-2">4. Live Preview</h3>\n          <p className="text-sm text-gray-600">\n            See merged data visualization in real-time before saving to dashboard\n          </p>\n        </div>\n      </div>\n\n      <div className="bg-blue-50 p-6 rounded-lg">\n        <h3 className="font-medium mb-3">🚀 Advanced Features</h3>\n        <ul className="space-y-2 text-sm">\n          <li className="flex items-center space-x-2">\n            <span className="w-2 h-2 bg-blue-500 rounded-full"></span>\n            <span><strong>Semantic Column Mapping:</strong> Automatically detects that "cost", "spend", and "total_spend" represent the same metric</span>\n          </li>\n          <li className="flex items-center space-x-2">\n            <span className="w-2 h-2 bg-blue-500 rounded-full"></span>\n            <span><strong>Intelligent Aggregation:</strong> Supports sum, average, max, min, and first-value aggregation strategies</span>\n          </li>\n          <li className="flex items-center space-x-2">\n            <span className="w-2 h-2 bg-blue-500 rounded-full"></span>\n            <span><strong>Runtime Query Engine:</strong> Merges data on-demand without duplication or preprocessing</span>\n          </li>\n          <li className="flex items-center space-x-2">\n            <span className="w-2 h-2 bg-blue-500 rounded-full"></span>\n            <span><strong>Visual Regression Testing:</strong> Every UI state is automatically tested for pixel-perfect consistency</span>\n          </li>\n        </ul>\n      </div>\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: \'Comprehensive workflow documentation showing how the multi-source chart builder transforms complex data integration into an intuitive user experience.\'\n      }\n    }\n  }\n}',...WorkflowExample.parameters?.docs?.source}}};try{MultiSourceChartBuilder.displayName="MultiSourceChartBuilder",MultiSourceChartBuilder.__docgenInfo={description:"",displayName:"MultiSourceChartBuilder",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},onSave:{defaultValue:null,description:"",name:"onSave",required:!0,type:{name:"(config: any) => void"}},widgetType:{defaultValue:null,description:"",name:"widgetType",required:!0,type:{name:"string"}},initialConfig:{defaultValue:null,description:"",name:"initialConfig",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/dashboard/multi-source-chart-builder.stories.tsx#MultiSourceChartBuilder"]={docgenInfo:MultiSourceChartBuilder.__docgenInfo,name:"MultiSourceChartBuilder",path:"src/components/dashboard/multi-source-chart-builder.stories.tsx#MultiSourceChartBuilder"})}catch(__react_docgen_typescript_loader_error){}}}]);