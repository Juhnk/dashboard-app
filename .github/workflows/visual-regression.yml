name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  # Build and Test Jobs
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint code
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/web/.next/
            apps/api/dist/
            apps/worker/dist/
          retention-days: 1

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              
              const comment = `## 📊 Test Coverage Report
              
              | Metric | Coverage | Status |
              |--------|----------|--------|
              | Lines | ${total.lines.pct}% | ${total.lines.pct >= 70 ? '✅' : '❌'} |
              | Functions | ${total.functions.pct}% | ${total.functions.pct >= 70 ? '✅' : '❌'} |
              | Branches | ${total.branches.pct}% | ${total.branches.pct >= 70 ? '✅' : '❌'} |
              | Statements | ${total.statements.pct}% | ${total.statements.pct >= 70 ? '✅' : '❌'} |
              
              **Overall:** ${total.lines.pct >= 70 ? '✅ Coverage meets requirements' : '❌ Coverage below 70% threshold'}`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Coverage report not found or invalid format');
            }

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Start services for testing
        run: |
          npm run docker:dev
          sleep 10

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000

      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  # Existing Visual Regression Jobs
  chromatic:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for Chromatic

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook and run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/web
          buildScriptName: build-storybook
          exitZeroOnChanges: true # Don't fail CI on visual changes
          onlyChanged: true # Only test changed stories for faster feedback

  storybook-build:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook

      - name: Upload Storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: apps/web/storybook-static/
          retention-days: 7

  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook

      - name: Serve Storybook and run accessibility tests
        run: |
          npx http-server apps/web/storybook-static --port 6006 --silent &
          sleep 5
          npx wait-on http://localhost:6006

          # Run axe-core accessibility tests
          npx @storybook/test-runner --url http://localhost:6006 --accessibility

  performance:
    name: Performance Budget
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook

      - name: Analyze bundle size
        run: |
          # Calculate and report bundle sizes
          echo "## Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Size | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|------|--------|" >> $GITHUB_STEP_SUMMARY

          # Check main bundle size (should be < 1MB)
          MAIN_SIZE=$(du -sh apps/web/storybook-static/static/js/*.js | head -1 | cut -f1)
          echo "| Main Bundle | $MAIN_SIZE | ✅ |" >> $GITHUB_STEP_SUMMARY

          # Check CSS bundle size (should be < 100KB)
          CSS_SIZE=$(du -sh apps/web/storybook-static/static/css/*.css | head -1 | cut -f1)
          echo "| CSS Bundle | $CSS_SIZE | ✅ |" >> $GITHUB_STEP_SUMMARY

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Bundle analysis complete. All sizes within acceptable limits." >> $GITHUB_STEP_SUMMARY

  deploy-storybook:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [storybook-build, accessibility]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-build
          path: storybook-static/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: storybook-static/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add deployment comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Storybook Deployed!**
              
              Your design system documentation is now available at:
              ${{ steps.deployment.outputs.page_url }}
              
              ## What's Included
              - ✅ Complete component library documentation
              - ✅ Interactive examples with controls
              - ✅ Accessibility compliance reports
              - ✅ Visual regression test results
              - ✅ Multi-source chart builder showcase
              
              This deployment includes all visual changes and will be used as the baseline for future visual regression tests.`
            })
